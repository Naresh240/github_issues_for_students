aws logs filter-log-events --log-group-name "/ucc/eks/dm-campaign-process-manager/dev" --filter-pattern "INFO" --limit 20

aws logs put-metric-filter --log-group-name "/ucc/eks/dm-campaign-process-manager/dev" --filter-name "InfoLogFilter" --filter-pattern "INFO" --metric-transformations "metricName=InfoLogCount,metricNamespace=UccDmApp,metricValue=1"

aws logs describe-metric-filters --log-group-name "/ucc/eks/dm-campaign-process-manager/dev"

aws cloudwatch put-metric-alarm --alarm-name "InfoLogAlarm" --alarm-description "Alarm when INFO logs appear in dm-campaign-process-manager" --metric-name "InfoLogCount" --namespace "UccDmApp" --statistic Sum --period 60 --threshold 0 --comparison-operator GreaterThanThreshold --evaluation-periods 1 --treat-missing-data notBreaching --alarm-actions test-sns-topic

def api_call(namespace, pod_name):
    API_TOKEN = get_api_token(secret_name)

    url = f"https://{K8S_API_SERVER}/api/v1/namespaces/{namespace}/pods/{name}"

    headers = {
        "Authorization": f"Bearer {API_TOKEN}",
        "Content-Type": "application/json"
    }

    # Create DELETE request
    req = urllib.request.Request(url, headers=headers, method="DELETE")

    try:
        with urllib.request.urlopen(req) as response:
            response_data = response.read().decode("utf-8")
            status_code = response.getcode()
            print(f"✅ Success: status={status_code}, response={response_data}")
            return status_code, response_data
    except urllib.error.HTTPError as e:
        error_body = e.read().decode("utf-8")
        print(f"❌ HTTPError: status={e.code}, body={error_body}")
        return e.code, error_body
    except urllib.error.URLError as e:
        print(f"❌ URLError: reason={e.reason}")
        return None, str(e.reason)

